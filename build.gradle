buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'signing'
    id 'maven-publish'
}

tasks.register('javadocJar', Jar) {
    archiveClassifier.set('javadoc')
    from javadoc
}

tasks.register('sourcesJar', Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

group = "com.virginholidays.aws"
version = applicationVersion

repositories {
    mavenCentral()
}

dependencies {
    implementation "software.amazon.awssdk:sns:${awsSdkVersion}"
    implementation "software.amazon.awssdk:sqs:${awsSdkVersion}"
    implementation "io.dropwizard:dropwizard-core:${dropwizardVersion}"
    implementation "io.dropwizard:dropwizard-logging:${dropwizardVersion}"
    implementation "io.dropwizard:dropwizard-validation:${dropwizardVersion}"
    implementation "io.dropwizard:dropwizard-client:${dropwizardVersion}"
    implementation 'com.google.inject:guice:3.0'

    implementation "org.projectlombok:lombok:${lombokVersion}"

    implementation "ch.qos.logback:logback-classic:$logbackVersion"
    implementation "ch.qos.logback:logback-core:$logbackVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoJunitVersion"
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            // Set artifact ID (if different from the project name)
            artifactId = "dw" // Replace as needed

            artifact tasks.javadocJar
            artifact tasks.sourcesJar

            pom {
                name.set("sqs-dropwizard")
                description.set("AWS Dropwizard utility library for integrating Amazon SQS and SNS with Dropwizard.")
                url.set("https://github.com/VAAD1ST/aws-dropwizard")

                scm {
                    connection.set("scm:git:https://github.com/VAAD1ST/aws-dropwizard")
                    developerConnection.set("scm:git:https://github.com/VAAD1ST/aws-dropwizard")
                    url.set("https://github.com/VAAD1ST/aws-dropwizard")
                }

                licenses {
                    license {
                        name.set("The Apache License, Version 2.0")
                        url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
                    }
                }

                developers {
                    developer {
                        id.set("vtosun")
                        name.set("Veysel Tosun")
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "ossrh"
            url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
        maven {
            name = "ossrhSnapshots"
            url = uri("https://oss.sonatype.org/content/repositories/snapshots/")
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(System.getenv("SIGNING_KEY"), System.getenv("SIGNING_PASSWORD"))
    sign publishing.publications.mavenJava
}

jar {
    manifest {
        attributes 'Main-Class': "${mainClass}"
        attributes 'Built-Date': new Date()
        attributes 'Built-By': System.getProperty('user.name')
        attributes 'Build-Jdk': System.getProperty('java.version')
        attributes 'Implementation-Title': "${applicationName}"
        attributes 'Implementation-Version': "${applicationVersion}"
        attributes 'Implementation-Vendor-Id': "${applicationGroup}"
    }
}
