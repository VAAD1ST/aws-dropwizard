name: Auto Release from Master

on:
  push:
    branches:
      - master  # Trigger on every push to the master branch

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Get Current Version Tag
        id: get_version
        run: |
          # Fetch tags and find the latest one matching v*
          git fetch --tags
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)

          # Default to v1.0.0 if no tag is found
          if [ -z "$LATEST_TAG" ]; then
            echo "v1.0.0" > VERSION.txt
          else
            echo "$LATEST_TAG" > VERSION.txt
          fi
          echo "Current version: $(cat VERSION.txt)"

      - name: Increment Version
        id: increment_version
        run: |
          # Parse version number
          VERSION=$(cat VERSION.txt)
          PREFIX=${VERSION%.*}
          PATCH=${VERSION##*.}
          NEW_VERSION="${PREFIX}.$((PATCH + 1))"
          echo $NEW_VERSION > VERSION.txt

          # Create new tag
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag $NEW_VERSION
          git push origin $NEW_VERSION
          
          echo "New version: $NEW_VERSION"

      - name: Build Project
        run: ./gradlew build

      - name: Publish to GitHub Packages
        run: ./gradlew publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.increment_version.outputs.NEW_VERSION }}
          release_name: Release ${{ steps.increment_version.outputs.NEW_VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload JAR file
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/aws-dropwizard.jar # Replace with the actual path
          asset_name: aws-dropwizard-${{ steps.increment_version.outputs.NEW_VERSION }}.jar
          asset_content_type: application/java-archive
